name: workflow

on: [push]

jobs:
  flake8:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Set up python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 flake8-broken-line flake8-return
        pip install -r requirements.txt
    - name: flake8 
      run:
        docker compose up
        docker compose exec -it backend python manage.py makemigrations
        docker compose exec -it backend python manage.py migrate
        docker compose exec -it backend python manage.py test


  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-20.04
      needs: flake8
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Login to Docker
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2
          with:
            push: true
            tags: gsatkov/yandex_academy_satkov:latest

#  deploy:
#    runs-on: ubuntu-latest
#    needs: build_and_push_to_docker_hub
#    steps:
#      - name: executing remote ssh commands to deploy
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USER }}
#          key: ${{ secrets.SSH_KEY }}
#          stack_file_name: docker-compose.yaml
#          script: |
#            sudo docker pull gsatkov/yandex_academy_satkov:latest
#            sudo docker-compose stop
#            sudo docker-compose rm backend
#            touch .env
#            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
#            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
#            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
#            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
#            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
#            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
#            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
#            echo DEBUG=${{ secrets.DEBUG }} >> .env
#            sudo docker-compose up -d

  Send_message_to_Telegram:
    name: Telegram
    runs-on: ubuntu-20.04
    needs: deploy
    steps:
      - uses: actions/checkout@master
      - name: send default message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} выполнен!
